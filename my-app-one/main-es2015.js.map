{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/attribute-directive-demo.directive.ts","./src/app/data-bindig-demo/data-bindig-demo.component.ts","./src/app/data-bindig-demo/data-bindig-demo.component.html","./src/app/demo-built-in-directives/demo-built-in-directives.component.ts","./src/app/demo-built-in-directives/demo-built-in-directives.component.html","./src/app/event-bindig-demo/event-bindig-demo.component.ts","./src/app/event-bindig-demo/event-bindig-demo.component.html","./src/app/host-listener-host-binding.directive.ts","./src/app/input-demo/input-demo.component.ts","./src/app/input-demo/input-demo.component.html","./src/app/life-cycle-demo/life-cycle-demo.component.ts","./src/app/life-cycle-demo/life-cycle-demo.component.html","./src/app/ng-content-and-content-child-demo/ng-content-and-content-child-demo.component.ts","./src/app/ng-content-and-content-child-demo/ng-content-and-content-child-demo.component.html","./src/app/output-demo/output-demo.component.ts","./src/app/output-demo/output-demo.component.html","./src/app/structural-directive-demo.directive.ts","./src/app/view-child-demo/view-child-demo.component.ts","./src/app/view-child-demo/view-child-demo.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, ChangeDetectionStrategy, ViewChild } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class AppComponent {\r\n  message: string = 'Hello Angular 9+';\r\n  someTextThroughComponentProperty = 'This is text binding through host component variable as input binding';\r\n  variableToCaptureOutputEventInfo: string;\r\n  ngDestroyDemoVariable = true;\r\n\r\n  handleSomethingChanged(event: any){\r\n    this.variableToCaptureOutputEventInfo = event;\r\n  }\r\n\r\n  constructor() {\r\n    console.log('APP constructor ');\r\n    // console.log('APP viewChildRefernce, contentChildRefernce', this.viewChildRefernce, this.contentChildRefernce);\r\n  }\r\n\r\n  ngOnChanges() {\r\n    console.log('APP ngOnChanges ');\r\n    // console.log('APP viewChildRefernce, contentChildRefernce', this.viewChildRefernce, this.contentChildRefernce);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    console.log('APP ngOnInit ');\r\n    // console.log('APP viewChildRefernce, contentChildRefernce', this.viewChildRefernce, this.contentChildRefernce);\r\n  }\r\n\r\n  ngDoCheck() {\r\n    console.log('APP ngDoCheck ');\r\n    // console.log('APP viewChildRefernce, contentChildRefernce', this.viewChildRefernce, this.contentChildRefernce);\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    console.log('APP ngAfterContentInit ');\r\n    // console.log('APP viewChildRefernce, contentChildRefernce', this.viewChildRefernce, this.contentChildRefernce);\r\n  }\r\n\r\n  ngAfterContentChecked() {\r\n    console.log('APP ngAfterContentChecked ');\r\n    // console.log('APP viewChildRefernce, contentChildRefernce', this.viewChildRefernce, this.contentChildRefernce);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    console.log('APP ngAfterViewInit ');\r\n    // console.log('APP viewChildRefernce, contentChildRefernce', this.viewChildRefernce, this.contentChildRefernce);\r\n  }\r\n\r\n  ngAfterViewChecked() {\r\n    console.log('APP ngAfterViewChecked ');\r\n    // console.log('APP viewChildRefernce, contentChildRefernce', this.viewChildRefernce, this.contentChildRefernce);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    console.log('APP ngOnDestroy ');\r\n    // console.log('APP viewChildRefernce, contentChildRefernce', this.viewChildRefernce, this.contentChildRefernce);\r\n  }\r\n}\r\n","<div class=\"container\" [ngStyle]=\"{'background-color': false ? 'red': 'black'}\">\r\n  <h1 class=\"display-4\">App component</h1>\r\n</div>\r\n\r\n<app-data-bindig-demo></app-data-bindig-demo>\r\n\r\n<app-event-bindig-demo></app-event-bindig-demo>\r\n\r\n<app-input-demo someText=\"This is direct text binding through component input\"></app-input-demo>\r\n\r\n<app-input-demo [someText]=\"someTextThroughComponentProperty\"></app-input-demo>\r\n\r\n<app-output-demo (somethingChanged)=\"handleSomethingChanged($event)\"></app-output-demo>\r\n<div class=\"container\" appAttributeDirectiveDemo>\r\n  This is coming from Output demo component to App component\r\n  <div style=\"background-color: lightgoldenrodyellow;margin-bottom: 10px;\">\r\n    {{variableToCaptureOutputEventInfo}}\r\n  </div>\r\n</div>\r\n\r\n<app-view-child-demo></app-view-child-demo>\r\n\r\n<app-ng-content-and-content-child-demo>\r\n  <app-input-demo someText=\"I am component sitting in content projection of another component\"></app-input-demo>\r\n  <div #contentChildRefVariable>\r\n    This is for content child demo and accessing this will apply background color\r\n  </div>\r\n</app-ng-content-and-content-child-demo>\r\n\r\n<app-demo-built-in-directives></app-demo-built-in-directives>\r\n\r\n<div class=\"container\" appAttributeDirectiveDemo>\r\n  <div class=\"row\">\r\n    This is structral directive demo\r\n  </div>\r\n  <div class=\"row\">\r\n    <div class=\"col\" *appStructuralDirectiveDemo=\"let x = ctx\" views=\"6\">\r\n      view {{x}}\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"container\" appAttributeDirectiveDemo>\r\n  <app-life-cycle-demo *ngIf=\"ngDestroyDemoVariable\" inputText=\"some text to trigger ngOnChanges\">\r\n    <div>Content of life cycle demo component</div>\r\n  </app-life-cycle-demo>\r\n\r\n  <div (click)=\"ngDestroyDemoVariable = !ngDestroyDemoVariable\">\r\n    <h3>ngOnDestory gets called after this element click and the component gets destroyed</h3>\r\n  </div>\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { InputDemoComponent } from './input-demo/input-demo.component';\r\nimport { OutputDemoComponent } from './output-demo/output-demo.component';\r\nimport { ViewChildDemoComponent } from './view-child-demo/view-child-demo.component';\r\nimport { NgContentAndContentChildDemoComponent } from './ng-content-and-content-child-demo/ng-content-and-content-child-demo.component';\r\nimport { DataBindigDemoComponent } from './data-bindig-demo/data-bindig-demo.component';\r\nimport { EventBindigDemoComponent } from './event-bindig-demo/event-bindig-demo.component';\r\nimport { AttributeDirectiveDemoDirective } from './attribute-directive-demo.directive';\nimport { HostListenerHostBindingDirective } from './host-listener-host-binding.directive';\nimport { DemoBuiltInDirectivesComponent } from './demo-built-in-directives/demo-built-in-directives.component';\nimport { StructuralDirectiveDemoDirective } from './structural-directive-demo.directive';\nimport { LifeCycleDemoComponent } from './life-cycle-demo/life-cycle-demo.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    InputDemoComponent,\r\n    OutputDemoComponent,\r\n    ViewChildDemoComponent,\r\n    NgContentAndContentChildDemoComponent,\r\n    DataBindigDemoComponent,\r\n    EventBindigDemoComponent,\r\n    AttributeDirectiveDemoDirective,\r\n    HostListenerHostBindingDirective,\r\n    DemoBuiltInDirectivesComponent,\r\n    StructuralDirectiveDemoDirective,\r\n    LifeCycleDemoComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Directive, ElementRef, Renderer2 } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[appAttributeDirectiveDemo]'\r\n})\r\nexport class AttributeDirectiveDemoDirective {\r\n\r\n  constructor(private el: ElementRef, private renderer: Renderer2) {\r\n    // this is example to set all styles in one go\r\n    this.renderer.setAttribute(this.el.nativeElement, 'style', 'margin-bottom: 10px; border: solid 2px gray');\r\n\r\n    // this is example to set one style at a time\r\n    // this.renderer.setStyle(this.el.nativeElement, 'border', 'solid 2px gray');\r\n\r\n    // this is example to access element through ElementRef which is NOT RECOMMENDED\r\n    //this.el.nativeElement.style.backgroundColor = 'red';\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-data-bindig-demo',\r\n  templateUrl: './data-bindig-demo.component.html',\r\n  styleUrls: ['./data-bindig-demo.component.css']\r\n})\r\nexport class DataBindigDemoComponent implements OnInit {\r\n  someText = 'This is string interpolation binding';\r\n  className = 'some-class-name';\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container\" [class]=\"className\" appAttributeDirectiveDemo>\r\n    {{someText}}\r\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-demo-built-in-directives',\n  templateUrl: './demo-built-in-directives.component.html',\n  styleUrls: ['./demo-built-in-directives.component.css']\n})\nexport class DemoBuiltInDirectivesComponent implements OnInit {\n\n  ngIfVariable = true;\n  users = [\n    { name: 'User 1', role: 'Developer' },\n    { name: 'User 2', role: 'Tester' },\n    { name: 'User 3', role: 'Developer' },\n    { name: 'User 4', role: 'Tester' }\n  ];\n  switchCaseVariable = 1;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  showHideElement(){\n    this.ngIfVariable = !this.ngIfVariable;\n  }\n\n}\n","<div class=\"container\" appAttributeDirectiveDemo>\n\n    <div class=\"row\" style=\"padding: 20px;\">\n        <div class=\"col\">\n            <span *ngIf=\"ngIfVariable\">This areas gets displayed based on ngIfVariable and this is a ngIf demo</span>\n        </div>\n        <div class=\"col\" (click)=\"showHideElement()\">\n            <button class=\"btn btn-primary\">Toggle Display</button>\n        </div>\n    </div>\n    <hr class=\"divider\" />\n\n\n    <div class=\"row\">\n        <div class=\"display-5\" class=\"col\">Users List (*ngFor) Demo</div>\n        <div class=\"col\">\n            <ul class=\"list-group\">\n                <li class=\"list-group-item\" *ngFor=\"let user of users\">\n                    <div>Name</div> {{user.name}}\n                    <div>Role</div> {{user.role}}\n                </li>\n            </ul>\n        </div>\n    </div>\n    <div class=\"divider\"></div>\n\n    <div>\n        <div class=\"display-4\" class=\"row\">\n            ngSwitch Demo\n        </div>\n        <div class=\"row\">\n            <button class=\"col btn btn-primary\" style=\"margin-right: 10px;\" (click)=\"switchCaseVariable = 1\">Case\n                1</button>\n            <button class=\"col btn btn-primary\" style=\"margin-right: 10px;\" (click)=\"switchCaseVariable = 2\">Case\n                2</button>\n            <button class=\"col btn btn-primary\" style=\"margin-right: 10px;\" (click)=\"switchCaseVariable = 3\">Case\n                3</button>\n            <button class=\"col btn btn-primary\" style=\"margin-right: 10px;\"\n                (click)=\"switchCaseVariable = undefined\">Case Default</button>\n        </div>\n        <div class=\"row\">\n            <div [ngSwitch]=\"switchCaseVariable\">\n                <div *ngSwitchCase=\"1\" class=\"display-4\">Case 1 Element</div>\n                <div *ngSwitchCase=\"2\">Case 2 Element</div>\n                <div *ngSwitchCase=\"3\">Case 3 Element</div>\n                <div *ngSwitchDefault>Default Case Element Displayed</div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-event-bindig-demo',\r\n  templateUrl: './event-bindig-demo.component.html',\r\n  styleUrls: ['./event-bindig-demo.component.css']\r\n})\r\nexport class EventBindigDemoComponent implements OnInit {\r\n\r\n  someText = 'This is simple event binding example, Click to see the demo';\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  // the name can be anything\r\n  eventHandler(event: Event) {\r\n    alert('Simple Event Binding Example');\r\n    console.log(event);\r\n  }\r\n\r\n}\r\n","<div class=\"container\" (click)=\"eventHandler($event)\" appAttributeDirectiveDemo>\r\n    {{someText}}\r\n</div>","import { Directive, HostListener, HostBinding } from '@angular/core';\n\n@Directive({\n  selector: '[appHostListenerHostBinding]'\n})\nexport class HostListenerHostBindingDirective {\n  @HostBinding('style.backgroundColor') backgroundColor;\n  @HostListener('click') clickHandler(event: any) {\n    this.backgroundColor = 'red';\n  } \n\n  constructor() { } \n\n}\n","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-input-demo',\r\n  templateUrl: './input-demo.component.html',\r\n  styleUrls: ['./input-demo.component.css']\r\n})\r\nexport class InputDemoComponent implements OnInit {\r\n\r\n  @Input('someText') inputFromOutside: string;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container\" appAttributeDirectiveDemo>\r\n    {{inputFromOutside}}\r\n</div>","import { Component, Input, ViewChild, ElementRef, ContentChild, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'app-life-cycle-demo',\n  templateUrl: './life-cycle-demo.component.html',\n  styleUrls: ['./life-cycle-demo.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LifeCycleDemoComponent {\n\n  @Input('inputText') text = '';\n  @ViewChild('viewChildRef') viewChildRefernce: ElementRef;\n  @ContentChild('myContentRef') contentChildRefernce: ElementRef;\n\n  constructor() {\n    console.log('LifeCycleDemoComponent constructor ');\n    // console.log('LifeCycleDemoComponent viewChildRefernce, contentChildRefernce', this.viewChildRefernce, this.contentChildRefernce);\n  }\n\n  ngOnChanges() {\n    console.log('LifeCycleDemoComponent ngOnChanges ');\n    // console.log('LifeCycleDemoComponent viewChildRefernce, contentChildRefernce', this.viewChildRefernce, this.contentChildRefernce);\n  }\n\n  ngOnInit(): void {\n    console.log('LifeCycleDemoComponent ngOnInit ');\n    // console.log('LifeCycleDemoComponent viewChildRefernce, contentChildRefernce', this.viewChildRefernce, this.contentChildRefernce);\n  }\n\n  ngDoCheck() {\n    console.log('LifeCycleDemoComponent ngDoCheck ');\n    // console.log('LifeCycleDemoComponent viewChildRefernce, contentChildRefernce', this.viewChildRefernce, this.contentChildRefernce);\n  }\n\n  ngAfterContentInit() {\n    console.log('LifeCycleDemoComponent ngAfterContentInit ');\n    // console.log('LifeCycleDemoComponent viewChildRefernce, contentChildRefernce', this.viewChildRefernce, this.contentChildRefernce);\n  }\n\n  ngAfterContentChecked() {\n    console.log('LifeCycleDemoComponent ngAfterContentChecked ');\n    // console.log('LifeCycleDemoComponent viewChildRefernce, contentChildRefernce', this.viewChildRefernce, this.contentChildRefernce);\n  }\n\n  ngAfterViewInit() {\n    console.log('LifeCycleDemoComponent ngAfterViewInit ');\n    // console.log('LifeCycleDemoComponent viewChildRefernce, contentChildRefernce', this.viewChildRefernce, this.contentChildRefernce);\n  }\n\n  ngAfterViewChecked() {\n    console.log('LifeCycleDemoComponent ngAfterViewChecked ');\n    // console.log('LifeCycleDemoComponent viewChildRefernce, contentChildRefernce', this.viewChildRefernce, this.contentChildRefernce);\n  }\n\n  ngOnDestroy() {\n    console.log('LifeCycleDemoComponent ngOnDestroy ');\n    // console.log('LifeCycleDemoComponent viewChildRefernce, contentChildRefernce', this.viewChildRefernce, this.contentChildRefernce);\n  }\n}","<div #viewChildRef>\r\n    View Child Ref\r\n</div>\r\n<ng-content></ng-content>\r\n","import { Component, OnInit, ContentChild, ElementRef, AfterContentInit, AfterViewInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-ng-content-and-content-child-demo',\r\n  templateUrl: './ng-content-and-content-child-demo.component.html',\r\n  styleUrls: ['./ng-content-and-content-child-demo.component.css']\r\n})\r\nexport class NgContentAndContentChildDemoComponent implements AfterContentInit {\r\n\r\n  @ContentChild('contentChildRefVariable') contentChild: ElementRef;\r\n\r\n  constructor() { }\r\n\r\n  // doing in this this method because this is where content is initiated or rendered\r\n  ngAfterContentInit(){\r\n    this.contentChild.nativeElement.style.backgroundColor = 'yellow';\r\n    this.contentChild.nativeElement.style.marginBottom = '10px';\r\n  }\r\n\r\n}\r\n","<div class=\"container\" appAttributeDirectiveDemo>\r\n    I am content projection example\r\n    <ng-content></ng-content>\r\n</div>","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-output-demo',\r\n  templateUrl: './output-demo.component.html',\r\n  styleUrls: ['./output-demo.component.css']\r\n})\r\nexport class OutputDemoComponent implements OnInit {\r\n\r\n  @Output() somethingChanged: EventEmitter<string> = new EventEmitter();\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  keypressHandler(event: any) {\r\n    // this input is coming from the keypress event on input text box\r\n    const inputText = event.target.value;\r\n\r\n    // lets annouce outside world something changed\r\n    this.somethingChanged.emit(inputText);\r\n  }\r\n}\r\n","<div class=\"container\" appAttributeDirectiveDemo #viewChildRefVariable>\r\n    I am an Output or communicate outside component example\r\n    <hr />\r\n    <div class=\"input-group mb-3\">\r\n        <div class=\"input-group-prepend\">\r\n            <span class=\"input-group-text\">Enter Something</span>\r\n        </div>\r\n        <input type=\"text\" class=\"form-control\" (keypress)=\"keypressHandler($event)\">\r\n    </div>\r\n</div>","import { Directive, TemplateRef, ViewContainerRef, Input } from '@angular/core';\n\n@Directive({\n  selector: '[appStructuralDirectiveDemo]'\n})\nexport class StructuralDirectiveDemoDirective {\n\n  @Input() views: number;\n\n  constructor(private tr: TemplateRef<any>, private vc: ViewContainerRef) { }\n\n\n  // as we have input and using the input we should listen to ngOnChanges\n  // which is triggered everytime there is change in input\n\n  ngOnChanges() {\n\n    // we can only use host elememt template and customize it with context but \n    // cannot create a new template\n    // so in simple terms structral directives can use same host element and create \n    // multiple templates but not create something completely new\n\n    for(let i=1; i<= this.views; i++){\n      // the second argument is context which can be used in the template\n      this.vc.createEmbeddedView(this.tr, { ctx: i });\n    }\n\n  }\n\n}\n","import { Component, OnInit, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-view-child-demo',\r\n  templateUrl: './view-child-demo.component.html',\r\n  styleUrls: ['./view-child-demo.component.css']\r\n})\r\nexport class ViewChildDemoComponent implements AfterViewInit {\r\n\r\n  @ViewChild('viewChildRefVariable') viewChildRef: ElementRef;\r\n\r\n  constructor() { }\r\n\r\n  // doing in this this method because this is where view (or template of host component) is initiated or rendered\r\n  ngAfterViewInit(): void {\r\n    this.viewChildRef.nativeElement.style.backgroundColor = 'lightblue';\r\n  }\r\n\r\n}\r\n","<div class=\"container\" appAttributeDirectiveDemo #viewChildRefVariable>\r\n    I am view child example and after accessing it will apply some style for demo    \r\n</div>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}