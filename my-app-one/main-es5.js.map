{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/attribute-directive-demo.directive.ts","webpack:///src/app/data-bindig-demo/data-bindig-demo.component.ts","webpack:///src/app/data-bindig-demo/data-bindig-demo.component.html","webpack:///src/app/demo-built-in-directives/demo-built-in-directives.component.ts","webpack:///src/app/demo-built-in-directives/demo-built-in-directives.component.html","webpack:///src/app/event-bindig-demo/event-bindig-demo.component.ts","webpack:///src/app/event-bindig-demo/event-bindig-demo.component.html","webpack:///src/app/host-listener-host-binding.directive.ts","webpack:///src/app/input-demo/input-demo.component.ts","webpack:///src/app/input-demo/input-demo.component.html","webpack:///src/app/life-cycle-demo/life-cycle-demo.component.ts","webpack:///src/app/life-cycle-demo/life-cycle-demo.component.html","webpack:///src/app/ng-content-and-content-child-demo/ng-content-and-content-child-demo.component.ts","webpack:///src/app/ng-content-and-content-child-demo/ng-content-and-content-child-demo.component.html","webpack:///src/app/output-demo/output-demo.component.ts","webpack:///src/app/output-demo/output-demo.component.html","webpack:///src/app/structural-directive-demo.directive.ts","webpack:///src/app/view-child-demo/view-child-demo.component.ts","webpack:///src/app/view-child-demo/view-child-demo.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","message","someTextThroughComponentProperty","ngDestroyDemoVariable","console","log","event","variableToCaptureOutputEventInfo","handleSomethingChanged","selector","templateUrl","styleUrls","changeDetection","OnPush","AppModule","declarations","imports","providers","bootstrap","AttributeDirectiveDemoDirective","el","renderer","setAttribute","nativeElement","DataBindigDemoComponent","someText","className","DemoBuiltInDirectivesComponent","ngIfVariable","users","name","role","switchCaseVariable","showHideElement","undefined","EventBindigDemoComponent","alert","eventHandler","HostListenerHostBindingDirective","backgroundColor","InputDemoComponent","LifeCycleDemoComponent","text","NgContentAndContentChildDemoComponent","contentChild","style","marginBottom","OutputDemoComponent","somethingChanged","inputText","target","value","emit","keypressHandler","StructuralDirectiveDemoDirective","tr","vc","i","views","createEmbeddedView","ctx","ViewChildDemoComponent","viewChildRef","environment","production","bootstrapModule","err","error"],"mappings":";;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACoCI;;AACE;;AACF;;;;;;AADE;;AAAA;;;;;;AAMJ;;AACE;;AAAK;;AAAoC;;AAC3C;;;;;;;;;;QDrCWC,Y;;;AAUX,8BAAc;AAAA;;AATd,aAAAC,OAAA,GAAkB,kBAAlB;AACA,aAAAC,gCAAA,GAAmC,uEAAnC;AAEA,aAAAC,qBAAA,GAAwB,IAAxB;AAOEC,eAAO,CAACC,GAAR,CAAY,kBAAZ,EADY,CAEZ;AACD;;;;+CAPsBC,K,EAAU;AAC/B,eAAKC,gCAAL,GAAwCD,KAAxC;AACD;;;sCAOa;AACZF,iBAAO,CAACC,GAAR,CAAY,kBAAZ,EADY,CAEZ;AACD;;;mCAEO;AACND,iBAAO,CAACC,GAAR,CAAY,eAAZ,EADM,CAEN;AACD;;;oCAEW;AACVD,iBAAO,CAACC,GAAR,CAAY,gBAAZ,EADU,CAEV;AACD;;;6CAEoB;AACnBD,iBAAO,CAACC,GAAR,CAAY,yBAAZ,EADmB,CAEnB;AACD;;;gDAEuB;AACtBD,iBAAO,CAACC,GAAR,CAAY,4BAAZ,EADsB,CAEtB;AACD;;;0CAEiB;AAChBD,iBAAO,CAACC,GAAR,CAAY,sBAAZ,EADgB,CAEhB;AACD;;;6CAEoB;AACnBD,iBAAO,CAACC,GAAR,CAAY,yBAAZ,EADmB,CAEnB;AACD;;;sCAEa;AACZD,iBAAO,CAACC,GAAR,CAAY,kBAAZ,EADY,CAEZ;AACD;;;;;;;uBArDUL,Y;AAAY,K;;;YAAZA,Y;AAAY,+B;AAAA,oF;AAAA,e;AAAA,a;AAAA,soB;AAAA;AAAA;ACRzB;;AACE;;AAAsB;;AAAa;;AACrC;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAAiB;AAAA,mBAAoB,IAAAQ,sBAAA,QAApB;AAAkD,WAAlD;;AAAoD;;AACrE;;AACE;;AACA;;AACE;;AACF;;AACF;;AAEA;;AAEA;;AACE;;AACA;;AACE;;AACF;;AACF;;AAEA;;AAEA;;AACE;;AACE;;AACF;;AACA;;AACE;;AAGF;;AACF;;AAEA;;AACE;;AAIA;;AAAK;AAAA;AAAA;;AACH;;AAAI;;AAAiF;;AACvF;;AACF;;;;AAlDuB;;AAUP;;AAAA;;AAMZ;;AAAA;;AA2BmB;;AAAA;;;;;;;;;;sEDnCVR,Y,EAAY;cANxB,uDAMwB;eANd;AACTS,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,qBAAD,CAHF;AAITC,yBAAe,EAAE,sEAAwBC;AAJhC,S;AAMc,Q;;;;;;;;;;;;;;;;;;;;AERzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAuCaC,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBAHT,E;AAAE,gBAJJ,CACP,uEADO,EAEP,0DAFO,CAII;;;;0HAGFA,S,EAAS;AAAA,uBApBlB,2DAoBkB,EAnBlB,mFAmBkB,EAlBlB,sFAkBkB,EAjBlB,iGAiBkB,EAhBlB,oJAgBkB,EAflB,oGAekB,EAdlB,uGAckB,EAblB,oGAakB,EAZlB,uGAYkB,EAXlB,4HAWkB,EAVlB,sGAUkB,EATlB,kGASkB;AATI,kBAGtB,uEAHsB,EAItB,0DAJsB;AASJ,O;AALP,K;;;;;sEAKFA,S,EAAS;cAtBrB,sDAsBqB;eAtBZ;AACRC,sBAAY,EAAE,CACZ,2DADY,EAEZ,mFAFY,EAGZ,sFAHY,EAIZ,iGAJY,EAKZ,oJALY,EAMZ,oGANY,EAOZ,uGAPY,EAQZ,oGARY,EASZ,uGATY,EAUZ,4HAVY,EAWZ,sGAXY,EAYZ,kGAZY,CADN;AAeRC,iBAAO,EAAE,CACP,uEADO,EAEP,0DAFO,CAfD;AAmBRC,mBAAS,EAAE,EAnBH;AAoBRC,mBAAS,EAAE,CAAC,2DAAD;AApBH,S;AAsBY,Q;;;;;;;;;;;;;;;;;;ACvCtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAKaC,+B,GAEX,yCAAoBC,EAApB,EAA4CC,QAA5C,EAAiE;AAAA;;AAA7C,WAAAD,EAAA,GAAAA,EAAA;AAAwB,WAAAC,QAAA,GAAAA,QAAA,CAAqB,CAC/D;;AACA,WAAKA,QAAL,CAAcC,YAAd,CAA2B,KAAKF,EAAL,CAAQG,aAAnC,EAAkD,OAAlD,EAA2D,6CAA3D,EAF+D,CAI/D;AACA;AAEA;AACA;AACD,K;;;uBAXUJ,+B,EAA+B,yH,EAAA,wH;AAAA,K;;;YAA/BA,+B;AAA+B;;;;;sEAA/BA,+B,EAA+B;cAH3C,uDAG2C;eAHjC;AACTV,kBAAQ,EAAE;AADD,S;AAGiC,Q;;;;;;;;;;;;;;;;;;;;;;;;ACL5C;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOae,uB;;;AAIX,yCAAc;AAAA;;AAHd,aAAAC,QAAA,GAAW,sCAAX;AACA,aAAAC,SAAA,GAAY,iBAAZ;AAEiB;;;;mCAET,CACP;;;;;;;uBAPUF,uB;AAAuB,K;;;YAAvBA,uB;AAAuB,2C;AAAA,c;AAAA,a;AAAA,iE;AAAA;AAAA;ACPpC;;AACI;;AACJ;;;;AAFuB;;AACnB;;AAAA;;;;;;;;;sEDMSA,uB,EAAuB;cALnC,uDAKmC;eALzB;AACTf,kBAAQ,EAAE,sBADD;AAETC,qBAAW,EAAE,mCAFJ;AAGTC,mBAAS,EAAE,CAAC,kCAAD;AAHF,S;AAKyB,Q;;;;;;;;;;;;;;;;;;;;AEPpC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACIY;;AAA2B;;AAAuE;;;;;;AAa9F;;AACI;;AAAK;;AAAI;;AAAO;;AAChB;;AAAK;;AAAI;;AAAO;;AACpB;;;;;;AAFoB;;AAAA;;AACA;;AAAA;;;;;;AAuBpB;;AAAyC;;AAAc;;;;;;AACvD;;AAAuB;;AAAc;;;;;;AACrC;;AAAuB;;AAAc;;;;;;AACrC;;AAAsB;;AAA8B;;;;QDtCvDgB,8B;;;AAWX,gDAAc;AAAA;;AATd,aAAAC,YAAA,GAAe,IAAf;AACA,aAAAC,KAAA,GAAQ,CACN;AAAEC,cAAI,EAAE,QAAR;AAAkBC,cAAI,EAAE;AAAxB,SADM,EAEN;AAAED,cAAI,EAAE,QAAR;AAAkBC,cAAI,EAAE;AAAxB,SAFM,EAGN;AAAED,cAAI,EAAE,QAAR;AAAkBC,cAAI,EAAE;AAAxB,SAHM,EAIN;AAAED,cAAI,EAAE,QAAR;AAAkBC,cAAI,EAAE;AAAxB,SAJM,CAAR;AAMA,aAAAC,kBAAA,GAAqB,CAArB;AAEiB;;;;mCAET,CACP;;;0CAEc;AACb,eAAKJ,YAAL,GAAoB,CAAC,KAAKA,YAA1B;AACD;;;;;;;uBAlBUD,8B;AAA8B,K;;;YAA9BA,8B;AAA8B,mD;AAAA,e;AAAA,a;AAAA,+e;AAAA;AAAA;ACP3C;;AAEI;;AACI;;AACI;;AACJ;;AACA;;AAAiB;AAAA,mBAAS,IAAAM,eAAA,EAAT;AAA0B,WAA1B;;AACb;;AAAgC;;AAAc;;AAClD;;AACJ;;AACA;;AAGA;;AACI;;AAAmC;;AAAwB;;AAC3D;;AACI;;AACI;;AAIJ;;AACJ;;AACJ;;AACA;;AAEA;;AACI;;AACI;;AACJ;;AACA;;AACI;;AAAgE;AAAA,4CAA8B,CAA9B;AAA+B,WAA/B;;AAAiC;;AAC5F;;AACL;;AAAgE;AAAA,4CAA8B,CAA9B;AAA+B,WAA/B;;AAAiC;;AAC5F;;AACL;;AAAgE;AAAA,4CAA8B,CAA9B;AAA+B,WAA/B;;AAAiC;;AAC5F;;AACL;;AACI;AAAA,4CAA8BC,SAA9B;AAAuC,WAAvC;;AAAyC;;AAAY;;AAC7D;;AACA;;AACI;;AACI;;AACA;;AACA;;AACA;;AACJ;;AACJ;;AACJ;;AACJ;;;;AA7CkB;;AAAA;;AAa0B;;AAAA;;AAwB3B;;AAAA;;AACI;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;;;;;;;;sEDrCRP,8B,EAA8B;cAL1C,uDAK0C;eALhC;AACTlB,kBAAQ,EAAE,8BADD;AAETC,qBAAW,EAAE,2CAFJ;AAGTC,mBAAS,EAAE,CAAC,0CAAD;AAHF,S;AAKgC,Q;;;;;;;;;;;;;;;;;;;;AEP3C;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOawB,wB;;;AAIX,0CAAc;AAAA;;AAFd,aAAAV,QAAA,GAAW,6DAAX;AAEiB;;;;mCAET,CACP,C,CAED;;;;qCACanB,K,EAAc;AACzB8B,eAAK,CAAC,8BAAD,CAAL;AACAhC,iBAAO,CAACC,GAAR,CAAYC,KAAZ;AACD;;;;;;;uBAbU6B,wB;AAAwB,K;;;YAAxBA,wB;AAAwB,4C;AAAA,c;AAAA,a;AAAA,6E;AAAA;AAAA;ACPrC;;AAAuB;AAAA,mBAAS,IAAAE,YAAA,QAAT;AAA6B,WAA7B;;AACnB;;AACJ;;;;AADI;;AAAA;;;;;;;;;sEDMSF,wB,EAAwB;cALpC,uDAKoC;eAL1B;AACT1B,kBAAQ,EAAE,uBADD;AAETC,qBAAW,EAAE,oCAFJ;AAGTC,mBAAS,EAAE,CAAC,mCAAD;AAHF,S;AAK0B,Q;;;;;;;;;;;;;;;;;;;;AEPrC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAKa2B,gC;;;AAMX,kDAAc;AAAA;AAAG;;;;qCAJmBhC,K,EAAY;AAC9C,eAAKiC,eAAL,GAAuB,KAAvB;AACD;;;;;;;uBAJUD,gC;AAAgC,K;;;YAAhCA,gC;AAAgC,yD;AAAA,iB;AAAA;AAAA;;;;;;;;;;;;;;sEAAhCA,gC,EAAgC;cAH5C,uDAG4C;eAHlC;AACT7B,kBAAQ,EAAE;AADD,S;AAGkC,Q;;;;gBAC1C,yD;iBAAY,uB;;;gBACZ,0D;iBAAa,O;;;;;;;;;;;;;;;;;;;;ACPhB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOa+B,kB;;;AAIX,oCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBAPUA,kB;AAAkB,K;;;YAAlBA,kB;AAAkB,qC;AAAA;AAAA;AAAA,O;AAAA,c;AAAA,a;AAAA,iE;AAAA;AAAA;ACP/B;;AACI;;AACJ;;;;AADI;;AAAA;;;;;;;;;sEDMSA,kB,EAAkB;cAL9B,uDAK8B;eALpB;AACT/B,kBAAQ,EAAE,gBADD;AAETC,qBAAW,EAAE,6BAFJ;AAGTC,mBAAS,EAAE,CAAC,4BAAD;AAHF,S;AAKoB,Q;;;;gBAE5B,mD;iBAAM,U;;;;;;;;;;;;;;;;;;;;AETT;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;QAQa8B,sB;;;AAMX,wCAAc;AAAA;;AAJM,aAAAC,IAAA,GAAO,EAAP;AAKlBtC,eAAO,CAACC,GAAR,CAAY,qCAAZ,EADY,CAEZ;AACD;;;;sCAEa;AACZD,iBAAO,CAACC,GAAR,CAAY,qCAAZ,EADY,CAEZ;AACD;;;mCAEO;AACND,iBAAO,CAACC,GAAR,CAAY,kCAAZ,EADM,CAEN;AACD;;;oCAEW;AACVD,iBAAO,CAACC,GAAR,CAAY,mCAAZ,EADU,CAEV;AACD;;;6CAEoB;AACnBD,iBAAO,CAACC,GAAR,CAAY,4CAAZ,EADmB,CAEnB;AACD;;;gDAEuB;AACtBD,iBAAO,CAACC,GAAR,CAAY,+CAAZ,EADsB,CAEtB;AACD;;;0CAEiB;AAChBD,iBAAO,CAACC,GAAR,CAAY,yCAAZ,EADgB,CAEhB;AACD;;;6CAEoB;AACnBD,iBAAO,CAACC,GAAR,CAAY,4CAAZ,EADmB,CAEnB;AACD;;;sCAEa;AACZD,iBAAO,CAACC,GAAR,CAAY,qCAAZ,EADY,CAEZ;AACD;;;;;;;uBAjDUoC,sB;AAAsB,K;;;YAAtBA,sB;AAAsB,0C;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRnC;;AACI;;AACJ;;AACA;;;;;;;;;sEDKaA,sB,EAAsB;cANlC,uDAMkC;eANxB;AACThC,kBAAQ,EAAE,qBADD;AAETC,qBAAW,EAAE,kCAFJ;AAGTC,mBAAS,EAAE,CAAC,iCAAD,CAHF;AAITC,yBAAe,EAAE,sEAAwBC;AAJhC,S;AAMwB,Q;;;;gBAEhC,mD;iBAAM,W;;;gBACN,uD;iBAAU,c;;;gBACV,0D;iBAAa,c;;;;;;;;;;;;;;;;;;;;AEZhB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;QAOa8B,qC;;;AAIX,uDAAc;AAAA;AAAG,O,CAEjB;;;;;6CACkB;AAChB,eAAKC,YAAL,CAAkBrB,aAAlB,CAAgCsB,KAAhC,CAAsCN,eAAtC,GAAwD,QAAxD;AACA,eAAKK,YAAL,CAAkBrB,aAAlB,CAAgCsB,KAAhC,CAAsCC,YAAtC,GAAqD,MAArD;AACD;;;;;;;uBAVUH,qC;AAAqC,K;;;YAArCA,qC;AAAqC,4D;AAAA;AAAA;;;;;;;;;;;;;;;;;;ACPlD;;AACI;;AACA;;AACJ;;;;;;;;;sEDIaA,qC,EAAqC;cALjD,uDAKiD;eALvC;AACTlC,kBAAQ,EAAE,uCADD;AAETC,qBAAW,EAAE,oDAFJ;AAGTC,mBAAS,EAAE,CAAC,mDAAD;AAHF,S;AAKuC,Q;;;;gBAE/C,0D;iBAAa,yB;;;;;;;;;;;;;;;;;;;;AEThB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaoC,mB;;;AAIX,qCAAc;AAAA;;AAFJ,aAAAC,gBAAA,GAAyC,IAAI,0DAAJ,EAAzC;AAEO;;;;mCAET,CACP;;;wCAEe1C,K,EAAY;AAC1B;AACA,cAAM2C,SAAS,GAAG3C,KAAK,CAAC4C,MAAN,CAAaC,KAA/B,CAF0B,CAI1B;;AACA,eAAKH,gBAAL,CAAsBI,IAAtB,CAA2BH,SAA3B;AACD;;;;;;;uBAfUF,mB;AAAmB,K;;;YAAnBA,mB;AAAmB,sC;AAAA;AAAA;AAAA,O;AAAA,c;AAAA,a;AAAA,oO;AAAA;AAAA;ACPhC;;AACI;;AACA;;AACA;;AACI;;AACI;;AAA+B;;AAAe;;AAClD;;AACA;;AAAwC;AAAA,mBAAY,IAAAM,eAAA,QAAZ;AAAmC,WAAnC;;AAAxC;;AACJ;;AACJ;;;;;;;;;sEDFaN,mB,EAAmB;cAL/B,uDAK+B;eALrB;AACTtC,kBAAQ,EAAE,iBADD;AAETC,qBAAW,EAAE,8BAFJ;AAGTC,mBAAS,EAAE,CAAC,6BAAD;AAHF,S;AAKqB,Q;;;;gBAE7B;;;;;;;;;;;;;;;;;;;;AETH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAKa2C,gC;;;AAIX,gDAAoBC,EAApB,EAAkDC,EAAlD,EAAwE;AAAA;;AAApD,aAAAD,EAAA,GAAAA,EAAA;AAA8B,aAAAC,EAAA,GAAAA,EAAA;AAAyB,O,CAG3E;AACA;;;;;sCAEc;AAEZ;AACA;AACA;AACA;AAEA,eAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,IAAG,KAAKC,KAAtB,EAA6BD,CAAC,EAA9B,EAAiC;AAC/B;AACA,iBAAKD,EAAL,CAAQG,kBAAR,CAA2B,KAAKJ,EAAhC,EAAoC;AAAEK,iBAAG,EAAEH;AAAP,aAApC;AACD;AAEF;;;;;;;uBAtBUH,gC,EAAgC,0H,EAAA,+H;AAAA,K;;;YAAhCA,gC;AAAgC,yD;AAAA;AAAA;AAAA,O;AAAA;;;;;sEAAhCA,gC,EAAgC;cAH5C,uDAG4C;eAHlC;AACT7C,kBAAQ,EAAE;AADD,S;AAGkC,Q;;;;;;;;gBAE1C;;;;;;;;;;;;;;;;;;;;ACPH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;QAOaoD,sB;;;AAIX,wCAAc;AAAA;AAAG,O,CAEjB;;;;;0CACe;AACb,eAAKC,YAAL,CAAkBvC,aAAlB,CAAgCsB,KAAhC,CAAsCN,eAAtC,GAAwD,WAAxD;AACD;;;;;;;uBATUsB,sB;AAAsB,K;;;YAAtBA,sB;AAAsB,0C;AAAA;AAAA;;;;;;;;;;;;;;;ACPnC;;AACI;;AACJ;;;;;;;;;sEDKaA,sB,EAAsB;cALlC,uDAKkC;eALxB;AACTpD,kBAAQ,EAAE,qBADD;AAETC,qBAAW,EAAE,kCAFJ;AAGTC,mBAAS,EAAE,CAAC,iCAAD;AAHF,S;AAKwB,Q;;;;gBAEhC,uD;iBAAU,sB;;;;;;;;;;;;;;;;;;;;AETb;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMoD,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,aAAI9D,OAAO,CAAC+D,KAAR,CAAcD,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, ChangeDetectionStrategy, ViewChild } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class AppComponent {\r\n  message: string = 'Hello Angular 9+';\r\n  someTextThroughComponentProperty = 'This is text binding through host component variable as input binding';\r\n  variableToCaptureOutputEventInfo: string;\r\n  ngDestroyDemoVariable = true;\r\n\r\n  handleSomethingChanged(event: any){\r\n    this.variableToCaptureOutputEventInfo = event;\r\n  }\r\n\r\n  constructor() {\r\n    console.log('APP constructor ');\r\n    // console.log('APP viewChildRefernce, contentChildRefernce', this.viewChildRefernce, this.contentChildRefernce);\r\n  }\r\n\r\n  ngOnChanges() {\r\n    console.log('APP ngOnChanges ');\r\n    // console.log('APP viewChildRefernce, contentChildRefernce', this.viewChildRefernce, this.contentChildRefernce);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    console.log('APP ngOnInit ');\r\n    // console.log('APP viewChildRefernce, contentChildRefernce', this.viewChildRefernce, this.contentChildRefernce);\r\n  }\r\n\r\n  ngDoCheck() {\r\n    console.log('APP ngDoCheck ');\r\n    // console.log('APP viewChildRefernce, contentChildRefernce', this.viewChildRefernce, this.contentChildRefernce);\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    console.log('APP ngAfterContentInit ');\r\n    // console.log('APP viewChildRefernce, contentChildRefernce', this.viewChildRefernce, this.contentChildRefernce);\r\n  }\r\n\r\n  ngAfterContentChecked() {\r\n    console.log('APP ngAfterContentChecked ');\r\n    // console.log('APP viewChildRefernce, contentChildRefernce', this.viewChildRefernce, this.contentChildRefernce);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    console.log('APP ngAfterViewInit ');\r\n    // console.log('APP viewChildRefernce, contentChildRefernce', this.viewChildRefernce, this.contentChildRefernce);\r\n  }\r\n\r\n  ngAfterViewChecked() {\r\n    console.log('APP ngAfterViewChecked ');\r\n    // console.log('APP viewChildRefernce, contentChildRefernce', this.viewChildRefernce, this.contentChildRefernce);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    console.log('APP ngOnDestroy ');\r\n    // console.log('APP viewChildRefernce, contentChildRefernce', this.viewChildRefernce, this.contentChildRefernce);\r\n  }\r\n}\r\n","<div class=\"container\" [ngStyle]=\"{'background-color': false ? 'red': 'black'}\">\r\n  <h1 class=\"display-4\">App component</h1>\r\n</div>\r\n\r\n<app-data-bindig-demo></app-data-bindig-demo>\r\n\r\n<app-event-bindig-demo></app-event-bindig-demo>\r\n\r\n<app-input-demo someText=\"This is direct text binding through component input\"></app-input-demo>\r\n\r\n<app-input-demo [someText]=\"someTextThroughComponentProperty\"></app-input-demo>\r\n\r\n<app-output-demo (somethingChanged)=\"handleSomethingChanged($event)\"></app-output-demo>\r\n<div class=\"container\" appAttributeDirectiveDemo>\r\n  This is coming from Output demo component to App component\r\n  <div style=\"background-color: lightgoldenrodyellow;margin-bottom: 10px;\">\r\n    {{variableToCaptureOutputEventInfo}}\r\n  </div>\r\n</div>\r\n\r\n<app-view-child-demo></app-view-child-demo>\r\n\r\n<app-ng-content-and-content-child-demo>\r\n  <app-input-demo someText=\"I am component sitting in content projection of another component\"></app-input-demo>\r\n  <div #contentChildRefVariable>\r\n    This is for content child demo and accessing this will apply background color\r\n  </div>\r\n</app-ng-content-and-content-child-demo>\r\n\r\n<app-demo-built-in-directives></app-demo-built-in-directives>\r\n\r\n<div class=\"container\" appAttributeDirectiveDemo>\r\n  <div class=\"row\">\r\n    This is structral directive demo\r\n  </div>\r\n  <div class=\"row\">\r\n    <div class=\"col\" *appStructuralDirectiveDemo=\"let x = ctx\" views=\"6\">\r\n      view {{x}}\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"container\" appAttributeDirectiveDemo>\r\n  <app-life-cycle-demo *ngIf=\"ngDestroyDemoVariable\" inputText=\"some text to trigger ngOnChanges\">\r\n    <div>Content of life cycle demo component</div>\r\n  </app-life-cycle-demo>\r\n\r\n  <div (click)=\"ngDestroyDemoVariable = !ngDestroyDemoVariable\">\r\n    <h3>ngOnDestory gets called after this element click and the component gets destroyed</h3>\r\n  </div>\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { InputDemoComponent } from './input-demo/input-demo.component';\r\nimport { OutputDemoComponent } from './output-demo/output-demo.component';\r\nimport { ViewChildDemoComponent } from './view-child-demo/view-child-demo.component';\r\nimport { NgContentAndContentChildDemoComponent } from './ng-content-and-content-child-demo/ng-content-and-content-child-demo.component';\r\nimport { DataBindigDemoComponent } from './data-bindig-demo/data-bindig-demo.component';\r\nimport { EventBindigDemoComponent } from './event-bindig-demo/event-bindig-demo.component';\r\nimport { AttributeDirectiveDemoDirective } from './attribute-directive-demo.directive';\nimport { HostListenerHostBindingDirective } from './host-listener-host-binding.directive';\nimport { DemoBuiltInDirectivesComponent } from './demo-built-in-directives/demo-built-in-directives.component';\nimport { StructuralDirectiveDemoDirective } from './structural-directive-demo.directive';\nimport { LifeCycleDemoComponent } from './life-cycle-demo/life-cycle-demo.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    InputDemoComponent,\r\n    OutputDemoComponent,\r\n    ViewChildDemoComponent,\r\n    NgContentAndContentChildDemoComponent,\r\n    DataBindigDemoComponent,\r\n    EventBindigDemoComponent,\r\n    AttributeDirectiveDemoDirective,\r\n    HostListenerHostBindingDirective,\r\n    DemoBuiltInDirectivesComponent,\r\n    StructuralDirectiveDemoDirective,\r\n    LifeCycleDemoComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Directive, ElementRef, Renderer2 } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[appAttributeDirectiveDemo]'\r\n})\r\nexport class AttributeDirectiveDemoDirective {\r\n\r\n  constructor(private el: ElementRef, private renderer: Renderer2) {\r\n    // this is example to set all styles in one go\r\n    this.renderer.setAttribute(this.el.nativeElement, 'style', 'margin-bottom: 10px; border: solid 2px gray');\r\n\r\n    // this is example to set one style at a time\r\n    // this.renderer.setStyle(this.el.nativeElement, 'border', 'solid 2px gray');\r\n\r\n    // this is example to access element through ElementRef which is NOT RECOMMENDED\r\n    //this.el.nativeElement.style.backgroundColor = 'red';\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-data-bindig-demo',\r\n  templateUrl: './data-bindig-demo.component.html',\r\n  styleUrls: ['./data-bindig-demo.component.css']\r\n})\r\nexport class DataBindigDemoComponent implements OnInit {\r\n  someText = 'This is string interpolation binding';\r\n  className = 'some-class-name';\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container\" [class]=\"className\" appAttributeDirectiveDemo>\r\n    {{someText}}\r\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-demo-built-in-directives',\n  templateUrl: './demo-built-in-directives.component.html',\n  styleUrls: ['./demo-built-in-directives.component.css']\n})\nexport class DemoBuiltInDirectivesComponent implements OnInit {\n\n  ngIfVariable = true;\n  users = [\n    { name: 'User 1', role: 'Developer' },\n    { name: 'User 2', role: 'Tester' },\n    { name: 'User 3', role: 'Developer' },\n    { name: 'User 4', role: 'Tester' }\n  ];\n  switchCaseVariable = 1;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  showHideElement(){\n    this.ngIfVariable = !this.ngIfVariable;\n  }\n\n}\n","<div class=\"container\" appAttributeDirectiveDemo>\n\n    <div class=\"row\" style=\"padding: 20px;\">\n        <div class=\"col\">\n            <span *ngIf=\"ngIfVariable\">This areas gets displayed based on ngIfVariable and this is a ngIf demo</span>\n        </div>\n        <div class=\"col\" (click)=\"showHideElement()\">\n            <button class=\"btn btn-primary\">Toggle Display</button>\n        </div>\n    </div>\n    <hr class=\"divider\" />\n\n\n    <div class=\"row\">\n        <div class=\"display-5\" class=\"col\">Users List (*ngFor) Demo</div>\n        <div class=\"col\">\n            <ul class=\"list-group\">\n                <li class=\"list-group-item\" *ngFor=\"let user of users\">\n                    <div>Name</div> {{user.name}}\n                    <div>Role</div> {{user.role}}\n                </li>\n            </ul>\n        </div>\n    </div>\n    <div class=\"divider\"></div>\n\n    <div>\n        <div class=\"display-4\" class=\"row\">\n            ngSwitch Demo\n        </div>\n        <div class=\"row\">\n            <button class=\"col btn btn-primary\" style=\"margin-right: 10px;\" (click)=\"switchCaseVariable = 1\">Case\n                1</button>\n            <button class=\"col btn btn-primary\" style=\"margin-right: 10px;\" (click)=\"switchCaseVariable = 2\">Case\n                2</button>\n            <button class=\"col btn btn-primary\" style=\"margin-right: 10px;\" (click)=\"switchCaseVariable = 3\">Case\n                3</button>\n            <button class=\"col btn btn-primary\" style=\"margin-right: 10px;\"\n                (click)=\"switchCaseVariable = undefined\">Case Default</button>\n        </div>\n        <div class=\"row\">\n            <div [ngSwitch]=\"switchCaseVariable\">\n                <div *ngSwitchCase=\"1\" class=\"display-4\">Case 1 Element</div>\n                <div *ngSwitchCase=\"2\">Case 2 Element</div>\n                <div *ngSwitchCase=\"3\">Case 3 Element</div>\n                <div *ngSwitchDefault>Default Case Element Displayed</div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-event-bindig-demo',\r\n  templateUrl: './event-bindig-demo.component.html',\r\n  styleUrls: ['./event-bindig-demo.component.css']\r\n})\r\nexport class EventBindigDemoComponent implements OnInit {\r\n\r\n  someText = 'This is simple event binding example, Click to see the demo';\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  // the name can be anything\r\n  eventHandler(event: Event) {\r\n    alert('Simple Event Binding Example');\r\n    console.log(event);\r\n  }\r\n\r\n}\r\n","<div class=\"container\" (click)=\"eventHandler($event)\" appAttributeDirectiveDemo>\r\n    {{someText}}\r\n</div>","import { Directive, HostListener, HostBinding } from '@angular/core';\n\n@Directive({\n  selector: '[appHostListenerHostBinding]'\n})\nexport class HostListenerHostBindingDirective {\n  @HostBinding('style.backgroundColor') backgroundColor;\n  @HostListener('click') clickHandler(event: any) {\n    this.backgroundColor = 'red';\n  } \n\n  constructor() { } \n\n}\n","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-input-demo',\r\n  templateUrl: './input-demo.component.html',\r\n  styleUrls: ['./input-demo.component.css']\r\n})\r\nexport class InputDemoComponent implements OnInit {\r\n\r\n  @Input('someText') inputFromOutside: string;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container\" appAttributeDirectiveDemo>\r\n    {{inputFromOutside}}\r\n</div>","import { Component, Input, ViewChild, ElementRef, ContentChild, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'app-life-cycle-demo',\n  templateUrl: './life-cycle-demo.component.html',\n  styleUrls: ['./life-cycle-demo.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LifeCycleDemoComponent {\n\n  @Input('inputText') text = '';\n  @ViewChild('viewChildRef') viewChildRefernce: ElementRef;\n  @ContentChild('myContentRef') contentChildRefernce: ElementRef;\n\n  constructor() {\n    console.log('LifeCycleDemoComponent constructor ');\n    // console.log('LifeCycleDemoComponent viewChildRefernce, contentChildRefernce', this.viewChildRefernce, this.contentChildRefernce);\n  }\n\n  ngOnChanges() {\n    console.log('LifeCycleDemoComponent ngOnChanges ');\n    // console.log('LifeCycleDemoComponent viewChildRefernce, contentChildRefernce', this.viewChildRefernce, this.contentChildRefernce);\n  }\n\n  ngOnInit(): void {\n    console.log('LifeCycleDemoComponent ngOnInit ');\n    // console.log('LifeCycleDemoComponent viewChildRefernce, contentChildRefernce', this.viewChildRefernce, this.contentChildRefernce);\n  }\n\n  ngDoCheck() {\n    console.log('LifeCycleDemoComponent ngDoCheck ');\n    // console.log('LifeCycleDemoComponent viewChildRefernce, contentChildRefernce', this.viewChildRefernce, this.contentChildRefernce);\n  }\n\n  ngAfterContentInit() {\n    console.log('LifeCycleDemoComponent ngAfterContentInit ');\n    // console.log('LifeCycleDemoComponent viewChildRefernce, contentChildRefernce', this.viewChildRefernce, this.contentChildRefernce);\n  }\n\n  ngAfterContentChecked() {\n    console.log('LifeCycleDemoComponent ngAfterContentChecked ');\n    // console.log('LifeCycleDemoComponent viewChildRefernce, contentChildRefernce', this.viewChildRefernce, this.contentChildRefernce);\n  }\n\n  ngAfterViewInit() {\n    console.log('LifeCycleDemoComponent ngAfterViewInit ');\n    // console.log('LifeCycleDemoComponent viewChildRefernce, contentChildRefernce', this.viewChildRefernce, this.contentChildRefernce);\n  }\n\n  ngAfterViewChecked() {\n    console.log('LifeCycleDemoComponent ngAfterViewChecked ');\n    // console.log('LifeCycleDemoComponent viewChildRefernce, contentChildRefernce', this.viewChildRefernce, this.contentChildRefernce);\n  }\n\n  ngOnDestroy() {\n    console.log('LifeCycleDemoComponent ngOnDestroy ');\n    // console.log('LifeCycleDemoComponent viewChildRefernce, contentChildRefernce', this.viewChildRefernce, this.contentChildRefernce);\n  }\n}","<div #viewChildRef>\r\n    View Child Ref\r\n</div>\r\n<ng-content></ng-content>\r\n","import { Component, OnInit, ContentChild, ElementRef, AfterContentInit, AfterViewInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-ng-content-and-content-child-demo',\r\n  templateUrl: './ng-content-and-content-child-demo.component.html',\r\n  styleUrls: ['./ng-content-and-content-child-demo.component.css']\r\n})\r\nexport class NgContentAndContentChildDemoComponent implements AfterContentInit {\r\n\r\n  @ContentChild('contentChildRefVariable') contentChild: ElementRef;\r\n\r\n  constructor() { }\r\n\r\n  // doing in this this method because this is where content is initiated or rendered\r\n  ngAfterContentInit(){\r\n    this.contentChild.nativeElement.style.backgroundColor = 'yellow';\r\n    this.contentChild.nativeElement.style.marginBottom = '10px';\r\n  }\r\n\r\n}\r\n","<div class=\"container\" appAttributeDirectiveDemo>\r\n    I am content projection example\r\n    <ng-content></ng-content>\r\n</div>","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-output-demo',\r\n  templateUrl: './output-demo.component.html',\r\n  styleUrls: ['./output-demo.component.css']\r\n})\r\nexport class OutputDemoComponent implements OnInit {\r\n\r\n  @Output() somethingChanged: EventEmitter<string> = new EventEmitter();\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  keypressHandler(event: any) {\r\n    // this input is coming from the keypress event on input text box\r\n    const inputText = event.target.value;\r\n\r\n    // lets annouce outside world something changed\r\n    this.somethingChanged.emit(inputText);\r\n  }\r\n}\r\n","<div class=\"container\" appAttributeDirectiveDemo #viewChildRefVariable>\r\n    I am an Output or communicate outside component example\r\n    <hr />\r\n    <div class=\"input-group mb-3\">\r\n        <div class=\"input-group-prepend\">\r\n            <span class=\"input-group-text\">Enter Something</span>\r\n        </div>\r\n        <input type=\"text\" class=\"form-control\" (keypress)=\"keypressHandler($event)\">\r\n    </div>\r\n</div>","import { Directive, TemplateRef, ViewContainerRef, Input } from '@angular/core';\n\n@Directive({\n  selector: '[appStructuralDirectiveDemo]'\n})\nexport class StructuralDirectiveDemoDirective {\n\n  @Input() views: number;\n\n  constructor(private tr: TemplateRef<any>, private vc: ViewContainerRef) { }\n\n\n  // as we have input and using the input we should listen to ngOnChanges\n  // which is triggered everytime there is change in input\n\n  ngOnChanges() {\n\n    // we can only use host elememt template and customize it with context but \n    // cannot create a new template\n    // so in simple terms structral directives can use same host element and create \n    // multiple templates but not create something completely new\n\n    for(let i=1; i<= this.views; i++){\n      // the second argument is context which can be used in the template\n      this.vc.createEmbeddedView(this.tr, { ctx: i });\n    }\n\n  }\n\n}\n","import { Component, OnInit, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-view-child-demo',\r\n  templateUrl: './view-child-demo.component.html',\r\n  styleUrls: ['./view-child-demo.component.css']\r\n})\r\nexport class ViewChildDemoComponent implements AfterViewInit {\r\n\r\n  @ViewChild('viewChildRefVariable') viewChildRef: ElementRef;\r\n\r\n  constructor() { }\r\n\r\n  // doing in this this method because this is where view (or template of host component) is initiated or rendered\r\n  ngAfterViewInit(): void {\r\n    this.viewChildRef.nativeElement.style.backgroundColor = 'lightblue';\r\n  }\r\n\r\n}\r\n","<div class=\"container\" appAttributeDirectiveDemo #viewChildRefVariable>\r\n    I am view child example and after accessing it will apply some style for demo    \r\n</div>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}